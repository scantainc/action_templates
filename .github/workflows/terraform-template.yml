---
name: Terraform

on:
  workflow_call:
    secrets:
        AWS_ACCESS_KEY_ID:
            required: true
        AWS_SECRET_ACCESS_KEY:
            required: true
        TF_API_TOKEN:
            required: true

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Print event data
        env:
         EVENT: ${{ toJSON( github.event ) }}
        run: echo "$EVENT"
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Set Environment if PRD
        if: github.ref == 'refs/heads/main'
        run: echo ENVPATH=infra/prd >> $GITHUB_ENV
      - name: Set Environment
        run: echo ENVPATH=infra/dev >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Check
        id: CHK
        run: echo "TF Version is $(terraform version)"

      - name: Terraform Init
        id: init
        working-directory: ${{env.ENVPATH}}
        run: terraform init

      - name: Terraform Validate
        id: validate
        working-directory: ${{env.ENVPATH}}
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        working-directory: ${{env.ENVPATH}}
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        id: plan-status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Taint
        id: taint
        working-directory: ${{env.ENVPATH}}
        run: terraform taint module.main.aws_ecs_task_definition.main
        continue-on-error: true

      - name: Terraform Apply
        id: apply
        working-directory: ${{env.ENVPATH}}
        run: terraform apply -auto-approve

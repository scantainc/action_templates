---
name: Docker

on:
  workflow_call:
    inputs:
    secrets:
      token:
        required: true

on:
    workflow_call:
        inputs:
        secrets:
            AWS_ACCESS_KEY_ID:
                required: true
            AWS_SECRET_ACCESS_KEY:
                required: true

jobs:
  main:
    name: "Build Image"
    runs-on: ubuntu-latest
    env:
     REPOSITORY_NAME: ${{github.repository}}
    steps:
      - name: Print event data
        env:
         EVENT: ${{ toJSON( github.event ) }}
        run: echo "$EVENT"
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.1
      - name: Configure AWS credentials
        id: Creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Checkout Repository
        id: Checkout
        uses: actions/checkout@v2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Write variables
        id: WriteVars
        run: |
          echo "ECR_REPOSITORY=$(echo ${REPOSITORY_NAME} | sed 's|scantainc/ml_|ml|g')" >> $GITHUB_ENV
          echo IMAGE_TAG=${{ steps.branch-name.outputs.current_branch }} >> $GITHUB_ENV
          echo MONGO_ENV=dev >> $GITHUB_ENV

      - name: Write variables if PRD
        id: WriteVarsPRD
        if: github.ref == 'refs/heads/main'
        run: |
          echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          echo "MONGO_ENV=prd" >> $GITHUB_ENV

      - name: Enable Docker Squash
        id: Docker_Squash
        run: |
         sudo bash -c 'echo \{\"cgroup-parent\":\"/actions_job\",\"experimental\":true\}' | sudo tee /etc/docker/daemon.json
         sudo systemctl restart docker.service

      - name: Build, Squash, tag, and push image to Amazon ECR
        working-directory: docker
        env:
         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build --build-arg MONGO_ENV --squash -t "${ECR_REGISTRY}"/"${ECR_REPOSITORY}":"${IMAGE_TAG}" .
          docker push --all-tags "${ECR_REGISTRY}"/"${ECR_REPOSITORY}"